{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nahue\\\\LEANDRO\\\\ProyectoIntegradorTerminado\\\\grupo-07-main\\\\Front-End\\\\src\\\\context\\\\User\\\\UserContext.js\";\nimport React, { createContext, useEffect, useState } from \"react\";\nimport { useJwt } from \"react-jwt\";\nexport const UserContext = createContext();\nexport const UserProvider = _ref => {\n  let {\n    children\n  } = _ref;\n  const [userCredentials, setUserCredentials] = useState(localStorage.getItem(\"token\"));\n  const {\n    decodedToken,\n    isExpired\n  } = useJwt(localStorage.getItem(\"token\"));\n  const [profile, setProfile] = useState({\n    id: \"\",\n    name: \"\",\n    surname: \"\",\n    email: \"\"\n  });\n  useEffect(() => {\n    if (decodedToken) {\n      const {\n        id,\n        email,\n        name,\n        surname\n      } = decodedToken;\n      setProfile({\n        id,\n        email,\n        name,\n        surname\n      });\n    }\n  }, [decodedToken]);\n  return /*#__PURE__*/React.createElement(UserContext.Provider, {\n    value: { ...profile,\n      userCredentials,\n      setUserCredentials\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, children);\n};","map":{"version":3,"names":["React","createContext","useEffect","useState","useJwt","UserContext","UserProvider","children","userCredentials","setUserCredentials","localStorage","getItem","decodedToken","isExpired","profile","setProfile","id","name","surname","email"],"sources":["C:/Users/nahue/LEANDRO/ProyectoIntegradorTerminado/grupo-07-main/Front-End/src/context/User/UserContext.js"],"sourcesContent":["import React, { createContext, useEffect, useState } from \"react\";\nimport { useJwt } from \"react-jwt\";\n\nexport const UserContext = createContext();\n\nexport const UserProvider = ({children}) => {   \n    const [userCredentials, setUserCredentials] = useState(localStorage.getItem(\"token\"));\n    const { decodedToken, isExpired } = useJwt(localStorage.getItem(\"token\"));\n    const [profile, setProfile] = useState({id:\"\", name:\"\", surname:\"\", email:\"\"});\n\n    useEffect(() => {\n      if(decodedToken){\n        const {id, email, name, surname} = decodedToken;      \n        setProfile({id,email,name,surname})}\n    }, [decodedToken]);\n\n    return (\n        <UserContext.Provider value={{...profile, userCredentials, setUserCredentials}}>\n            {children}\n        </UserContext.Provider>\n    )\n}"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,SAA/B,EAA0CC,QAA1C,QAA0D,OAA1D;AACA,SAASC,MAAT,QAAuB,WAAvB;AAEA,OAAO,MAAMC,WAAW,GAAGJ,aAAa,EAAjC;AAEP,OAAO,MAAMK,YAAY,GAAG,QAAgB;EAAA,IAAf;IAACC;EAAD,CAAe;EACxC,MAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCN,QAAQ,CAACO,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAD,CAAtD;EACA,MAAM;IAAEC,YAAF;IAAgBC;EAAhB,IAA8BT,MAAM,CAACM,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAD,CAA1C;EACA,MAAM,CAACG,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC;IAACa,EAAE,EAAC,EAAJ;IAAQC,IAAI,EAAC,EAAb;IAAiBC,OAAO,EAAC,EAAzB;IAA6BC,KAAK,EAAC;EAAnC,CAAD,CAAtC;EAEAjB,SAAS,CAAC,MAAM;IACd,IAAGU,YAAH,EAAgB;MACd,MAAM;QAACI,EAAD;QAAKG,KAAL;QAAYF,IAAZ;QAAkBC;MAAlB,IAA6BN,YAAnC;MACAG,UAAU,CAAC;QAACC,EAAD;QAAIG,KAAJ;QAAUF,IAAV;QAAeC;MAAf,CAAD,CAAV;IAAoC;EACvC,CAJQ,EAIN,CAACN,YAAD,CAJM,CAAT;EAMA,oBACI,oBAAC,WAAD,CAAa,QAAb;IAAsB,KAAK,EAAE,EAAC,GAAGE,OAAJ;MAAaN,eAAb;MAA8BC;IAA9B,CAA7B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACKF,QADL,CADJ;AAKH,CAhBM"},"metadata":{},"sourceType":"module"}