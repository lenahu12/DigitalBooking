{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = toISODateString;\n\nvar _moment = _interopRequireDefault(require(\"moment\"));\n\nvar _toMomentObject = _interopRequireDefault(require(\"./toMomentObject\"));\n\nfunction toISODateString(date, currentFormat) {\n  var dateObj = _moment[\"default\"].isMoment(date) ? date : (0, _toMomentObject[\"default\"])(date, currentFormat);\n  if (!dateObj) return null; // Template strings compiled in strict mode uses concat, which is slow. Since\n  // this code is in a hot path and we want it to be as fast as possible, we\n  // want to use old-fashioned +.\n  // eslint-disable-next-line prefer-template\n\n  return dateObj.year() + '-' + String(dateObj.month() + 1).padStart(2, '0') + '-' + String(dateObj.date()).padStart(2, '0');\n}","map":{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","toISODateString","_moment","_toMomentObject","date","currentFormat","dateObj","isMoment","year","String","month","padStart"],"sources":["C:/Users/nahue/LEANDRO/ProyectoIntegradorTerminado/grupo-07-main/Front-End/node_modules/react-dates/lib/utils/toISODateString.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = toISODateString;\n\nvar _moment = _interopRequireDefault(require(\"moment\"));\n\nvar _toMomentObject = _interopRequireDefault(require(\"./toMomentObject\"));\n\nfunction toISODateString(date, currentFormat) {\n  var dateObj = _moment[\"default\"].isMoment(date) ? date : (0, _toMomentObject[\"default\"])(date, currentFormat);\n  if (!dateObj) return null; // Template strings compiled in strict mode uses concat, which is slow. Since\n  // this code is in a hot path and we want it to be as fast as possible, we\n  // want to use old-fashioned +.\n  // eslint-disable-next-line prefer-template\n\n  return dateObj.year() + '-' + String(dateObj.month() + 1).padStart(2, '0') + '-' + String(dateObj.date()).padStart(2, '0');\n}"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEAC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAC3CC,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAAC,SAAD,CAAP,GAAqBE,eAArB;;AAEA,IAAIC,OAAO,GAAGP,sBAAsB,CAACC,OAAO,CAAC,QAAD,CAAR,CAApC;;AAEA,IAAIO,eAAe,GAAGR,sBAAsB,CAACC,OAAO,CAAC,kBAAD,CAAR,CAA5C;;AAEA,SAASK,eAAT,CAAyBG,IAAzB,EAA+BC,aAA/B,EAA8C;EAC5C,IAAIC,OAAO,GAAGJ,OAAO,CAAC,SAAD,CAAP,CAAmBK,QAAnB,CAA4BH,IAA5B,IAAoCA,IAApC,GAA2C,CAAC,GAAGD,eAAe,CAAC,SAAD,CAAnB,EAAgCC,IAAhC,EAAsCC,aAAtC,CAAzD;EACA,IAAI,CAACC,OAAL,EAAc,OAAO,IAAP,CAF8B,CAEjB;EAC3B;EACA;EACA;;EAEA,OAAOA,OAAO,CAACE,IAAR,KAAiB,GAAjB,GAAuBC,MAAM,CAACH,OAAO,CAACI,KAAR,KAAkB,CAAnB,CAAN,CAA4BC,QAA5B,CAAqC,CAArC,EAAwC,GAAxC,CAAvB,GAAsE,GAAtE,GAA4EF,MAAM,CAACH,OAAO,CAACF,IAAR,EAAD,CAAN,CAAuBO,QAAvB,CAAgC,CAAhC,EAAmC,GAAnC,CAAnF;AACD"},"metadata":{},"sourceType":"script"}